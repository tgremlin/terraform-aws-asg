version: 2

jobs:
  plan-apply:
    working_directory: /tmp/project
    docker:
      - image: tgremlin82/terraform_ansible_aws:1.0
    steps:
      - checkout
      - run:
          name: run AWS configure
          command: |
            aws configure --profile $CIRCLE_BRANCH set region $AWS_DEFAULT_REGION
            aws configure --profile $CIRCLE_BRANCH set access_key $AWS_ACCESS_KEY_ID
            aws configure --profile $CIRCLE_BRANCH set secret_key $AWS_SECRET_ACCESS_KEY
      - run:
          name: install git and graphviz
          command: |
            apt update
            apt install git -y
            apt install graphviz -y
      - run:
          name: terraform init & plan
          command: |
            terraform fmt -recursive .
            terraform init -input=false
            terraform plan -var="sqlpassword=$sqlpassword" -var="sqlusername=$sqlusername" -out tfapply
            terraform graph | dot -Tsvg > graph.svg
      - store_artifacts:
          path: /tmp/project/graph.svg
          destination: graph.svg   
      - persist_to_workspace:
          root: .
          paths:
            - .

  apply:   
    working_directory: /tmp/project  
    docker:
      - image: tgremlin82/terraform_ansible_aws:1.0
    steps:
      - attach_workspace:
          at: /tmp/project
      - run:
          name: terraform apply
          command: |
            terraform apply -auto-approve tfapply
      - run:
          name: install terraform docs
          command: |
            curl -Lo ./terraform-docs.tar.gz https://github.com/terraform-docs/terraform-docs/releases/download/v0.16.0/terraform-docs-v0.16.0-$(uname)-amd64.tar.gz
            tar -xzf terraform-docs.tar.gz
            chmod +x terraform-docs
            mv terraform-docs /usr/local/bin/terraform-docs
            terraform-docs
      - persist_to_workspace:
          root: .
          paths:
            - .

  plan-destroy: 
    working_directory: /tmp/project
    docker:
      - image: tgremlin82/terraform_ansible_aws:1.0
    steps:
      - attach_workspace:
          at: /tmp/project
      - run:
          name: terraform create destroy plan
          command: |
            terraform plan -destroy -var="sqlpassword=$sqlpassword" -var="sqlusername=$sqlusername" -out tfdestroy
      - persist_to_workspace:
          root: .
          paths:
            - .

  destroy:
    working_directory: /tmp/project
    docker:
      - image: tgremlin82/terraform_ansible_aws:1.0
    steps:
      - attach_workspace:
          at: /tmp/project
      - run:
          name: terraform destroy
          command: |
            terraform apply -auto-approve tfdestroy
workflows:
  version: 2
  plan_approve_apply:
    jobs:
      - plan-apply
      - hold-apply:
          type: approval
          requires:
            - plan-apply
      - apply:
          requires:
            - hold-apply
      - plan-destroy:
          requires:
            - apply
      - hold-destroy:
          type: approval
          requires:
            - plan-destroy
      - destroy:
          requires:
            - hold-destroy